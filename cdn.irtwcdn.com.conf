server {
	server_name cdn.xxxxxxxxxxxx.ink cdn.xxxxxxxxxxxx.click cdn.xxxxxxxxxxxx.click cdn.xxxxxxxxxxxx.click cdn.xxxxxxxxxxxx.click cdn.xxxxxxxxxxxx.click;
	root /var/www/irtw_cdn;

    client_max_body_size 1M;
    autoindex off;
    index index.html index.htm index.php;
    access_log off;
    server_tokens off;
	
    location ~ ^/live_streams/segments/(.*).(php|js|mp4|css)$ {
        root /var/www/irtw_cdn;
        access_log off;
		expires 300s;
		log_not_found off;
		add_header Cache-Control public;
		add_header Access-Control-Allow-Origin *;
		add_header Access-Control-Allow-Headers GET;
		add_header Vary: Origin;
		tcp_nodelay off;
		open_file_cache max=3000 inactive=300s;
		open_file_cache_valid 45s;
		open_file_cache_min_uses 1;
		open_file_cache_errors off;
		
		if (!-e $request_filename){
			rewrite ^/live_streams/segments/(.*).(php|js|mp4|css) /live_streams/segments/$1.ts;
		}
	}

    location ~ ^/live_streams/segments/(.*).ts$ {
        root /var/www/irtw_cdn;
        access_log off;
		expires 300s;
		log_not_found off;
		add_header Cache-Control public;
		add_header Access-Control-Allow-Origin *;
		add_header Access-Control-Allow-Headers GET;
		add_header Vary: Origin;
		tcp_nodelay off;
		open_file_cache max=3000 inactive=300s;
		open_file_cache_valid 45s;
		open_file_cache_min_uses 1;
		open_file_cache_errors off;
		
		if (!-e $request_filename){
			rewrite ^/live_streams/segments/(.*) /live_streams/ts.php?ts=$1;
		}
	}

    location ~ ^/live_streams/(stream|ostream|playlist|ts).php$ {
        root /var/www/irtw_cdn;
        access_log off;
        try_files $uri =404;
        fastcgi_pass unix:/run/php/php8.2-fpm.sock;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
    }

 	location / {
        return 301 https://xxxxxxxxxxxx.fun;
    }
	
    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/xxxxxxxxxxxx.fun/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/xxxxxxxxxxxx.fun/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
	#return 404;
}


server {
	listen 80;
	listen [::]:80;
	root /var/www/irtw_cdn;

    client_max_body_size 1M;
    autoindex off;
    index index.html index.htm index.php;
    access_log off;
    server_tokens off;
	
    location ~ ^/live_streams/segments/(.*).(php|js|mp4|css)$ {
        root /var/www/irtw_cdn;
        access_log off;
		expires 300s;
		log_not_found off;
		add_header Cache-Control public;
		add_header Access-Control-Allow-Origin *;
		add_header Access-Control-Allow-Headers GET;
		add_header Vary: Origin;
		tcp_nodelay off;
		open_file_cache max=3000 inactive=300s;
		open_file_cache_valid 45s;
		open_file_cache_min_uses 1;
		open_file_cache_errors off;
		
		if (!-e $request_filename){
			rewrite ^/live_streams/segments/(.*).(php|js|mp4|css) /live_streams/segments/$1.ts;
		}
	}

    location ~ ^/live_streams/segments/(.*).ts$ {
        root /var/www/irtw_cdn;
        access_log off;
		expires 300s;
		log_not_found off;
		add_header Cache-Control public;
		add_header Access-Control-Allow-Origin *;
		add_header Access-Control-Allow-Headers GET;
		add_header Vary: Origin;
		tcp_nodelay off;
		open_file_cache max=3000 inactive=300s;
		open_file_cache_valid 45s;
		open_file_cache_min_uses 1;
		open_file_cache_errors off;
		
		if (!-e $request_filename){
			rewrite ^/live_streams/segments/(.*) /live_streams/ts.php?ts=$1;
		}
	}

    location ~ ^/live_streams/(stream|ostream|playlist|ts).php$ {
        root /var/www/irtw_cdn;
        access_log off;
        try_files $uri =404;
        fastcgi_pass unix:/run/php/php8.2-fpm.sock;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
    }

 	location / {
        return 301 https://xxxxxxxxxxxx.fun;
    }
}
