
server {
    server_name xxxxxxxxxxxx.fun;
    root /var/www/irtw/public;
    client_max_body_size 1M;
    autoindex off;
    index index.html index.htm index.php;
    access_log off;
    server_tokens off;

    location ~ ^/errors/(400|401|403|404|405|500)\.html$ {
        root /var/www/irtw/public;
        internal;
    }

    error_page 400 /errors/400.html;
    error_page 401 /errors/401.html;
    error_page 403 /errors/403.html;
    error_page 404 /errors/404.html;
    error_page 404 /errors/405.html;
    error_page 500 /errors/500.html;

    location ~ /\.(htaccess|env|git|svn|env|git|artisan|composer\.(json|lock)|README\.md)$ {
        deny all;
        return 404;
    }

    location ~ ^/(vendor|storage|config|secrets|bootstrap|database)/ {
        deny all;
        return 404;
    }

    location = /config.php {
        deny all;
        return 404;
    }

    location ~* \.(js|css|svg|ico|woff|woff2|ttf|map)$ {
        expires max;
        add_header Cache-Control "public, no-transform";
    }

    location ~ ^/(uploads|template)/ {
        expires max;
        add_header Cache-Control "public, no-transform";
    }

    location /chat_service/server {
        access_log off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy false;
        proxy_pass http://localhost:6032;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location ~ ^/live_streams/(stream|ostream|playlist)/(.*).(m3u8|php|js|css)$ {
        root /var/www/irtw_cdn;
        access_log off;

        if (!-e $request_filename) {
            rewrite ^/live_streams/(stream|ostream|playlist)/(.*).(m3u8|php|js|css)$ /live_streams/$1.php?username=$2 last;
        }
    }

    location ~ ^/live_streams/segments/(.*).(php|js|mp4|css)$ {
        root /var/www/irtw_cdn;
        access_log off;
		expires 300s;
		log_not_found off;
		add_header Cache-Control public;
		add_header Access-Control-Allow-Origin *;
		add_header Access-Control-Allow-Headers GET;
		add_header Vary: Origin;
		tcp_nodelay off;
		open_file_cache max=3000 inactive=300s;
		open_file_cache_valid 45s;
		open_file_cache_min_uses 1;
		open_file_cache_errors off;
		
		if (!-e $request_filename){
			rewrite ^/live_streams/segments/(.*).(php|js|mp4|css) /live_streams/segments/$1.ts;
		}
	}

    location ~ ^/live_streams/segments/(.*).ts$ {
        root /var/www/irtw_cdn;
        access_log off;
		expires 300s;
		log_not_found off;
		add_header Cache-Control public;
		add_header Access-Control-Allow-Origin *;
		add_header Access-Control-Allow-Headers GET;
		add_header Vary: Origin;
		tcp_nodelay off;
		open_file_cache max=3000 inactive=300s;
		open_file_cache_valid 45s;
		open_file_cache_min_uses 1;
		open_file_cache_errors off;
		
		if (!-e $request_filename){
			rewrite ^/live_streams/segments/(.*) /live_streams/ts.php?ts=$1;
		}
	}

    location ~ ^/live_streams/(stream|ostream|playlist|ts).php$ {
        root /var/www/irtw_cdn;
        access_log off;
        try_files $uri =404;
        fastcgi_pass unix:/run/php/php8.2-fpm.sock;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
    }

    location ~ /chat_emoji/(7tv|betterttv|betterttv_frankerfacez|twemoji|twitch|emojies)/(.*)$ {
        root /var/www/irtw_cdn;
        access_log off;
        expires max;
        add_header Cache-Control "public, no-transform";

        if (!-e $request_filename) {
            rewrite /chat_emoji/(7tv|betterttv|betterttv_frankerfacez|twemoji|twitch|emojies)/(.*) /chat_emoji/$1/index.php?masterkingurlis=$2;
        }

        location ~* \.php$ {
            try_files $uri =404;
            fastcgi_pass unix:/run/php/php8.2-fpm.sock;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
        }
    }

    location /images {
        root /var/www/irtw_cdn;
        access_log off;
        expires 300s;
        log_not_found off;
        add_header Cache-Control public;
        tcp_nodelay off;
        open_file_cache max=3000 inactive=300s;
        open_file_cache_valid 45s;
        open_file_cache_min_uses 1;
        open_file_cache_errors off;

        try_files $uri $uri/ /images/mk_downloader.php?url=$uri;

        location ~* \.php$ {
            try_files $uri =404;
            fastcgi_pass unix:/run/php/php8.2-fpm.sock;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
        }
    }
    
    location ~ \.php$ {
        try_files $uri @SendtoFramework;
        access_log off;
        include fastcgi_params;
        fastcgi_pass unix:/run/php/php8.2-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
    }

	location @SendtoFramework {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/xxxxxxxxxxxx.fun/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/xxxxxxxxxxxx.fun/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
    if ($host = xxxxxxxxxxxx.fun) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name xxxxxxxxxxxx.fun;

    listen 80;
    return 404; # managed by Certbot


}